[user]
     example = 0

     cuda = 1
     claw-version=4

     rho = 1
     bulk = 4


[clawpatch]
     # Grid dimensions
     mx = 32               # mx_leaf
     my = 32               # my_leaf
     mbc = 2              # Number of ghost cells
     maux = 0

     # Equations and boundary conditions
     meqn = 3             # Number of equations

[Options]

     # Regridding information
     minlevel = 2               # Minimum level
     maxlevel = 4               # Maximum levels of refinement
     regrid_interval = 1        # Regrid every 'regrid_interval' time steps.
     refine_threshold = 0.5
     coarsen_threshold = 0.25
     smooth-refine = T
     smooth-level = 5

# Time stepping
     tfinal = 1.0
     initial_dt = 0.0025    # Initial time step for 'minlevel'

     use_fixed_dt = F     # Take a fixed time step
     max_cfl = 0.5
     desired_cfl = 0.495

     outstyle = 3         # OutputStyle = 1,2,3 (see below, e.g. [OutputStyle_1]
     nout = 10            # Used for all three out styles
     nstep = 1            # Only used if outstyle is 3

     subcycle = T         # subcycle in time ( = T or F).

# File and console IO
     verbosity = production    # verbose
     output = F               # See clawpack options, below
     report-timing = T

     # -----------
     # Tikz output 
     # -----------
     tikz-out = F
     tikz-figsize = 4 4 
     tikz-plot-prefix = 'plot'
     tikz-plot-suffix = 'png'

     # -------------------------
     # Diagnostics and debugging
     # -------------------------
     trapfpe = T                 # Trap floating point errors.
     mpi_debug = F               # Attach mpi processes in gdb
     conservation-check = F
     run-user-diagnostics = F
     compute-error = F
     report-timing=T
     report-timing-verbosity=extra    # To get cuda details

# Mapping and topology
     manifold = F         # Manifold

     # Used only if manifold = F (fclaw2d_map_nomap)
     ax = -1
     bx = 1
     ay = -1
     by = 1

[clawpack46]
     order  = 1 0       # normal and transverse order
     mcapa = 0          # mcapa
     src_term = 0       # src_term

     mwaves = 2         # mwaves
     mthlim = 3 3       # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1    # mthbc(1) (left edge), etc.

     # output
     ascii-out = T
     vtk-out = F

[clawpack5]
     order  = 1 0
     mcapa = 0          # mcapa
     src_term = 0       # src_term

     mwaves = 2         # mwaves
     mthlim = 3 3       # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1    # mthbc(1) (left edge), etc.

     # output
     ascii-out = T
     vtk-out = F


[cudaclaw]
     order  = 1 0         # normal and transverse order
     mcapa = 0            # mcapa
     maux = 0             # maux
     src_term = 0         # src_term

     mwaves = 2           # mwaves
     mthlim = 3 3           # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1      # mthbc (=left,right,bottom,top)

     # output
     ascii-out = T
     vtk-out = F
