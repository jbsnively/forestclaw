[user]
      example = 0

      gravity = 1.0

      claw-version = 4

[clawpatch]
     # Grid dimensions
     mx = 8               # mx_leaf
     my = 8               # my_leaf
     mbc = 2              # Number of ghost cells
     maux = 0

     meqn = 3             # Number of equations

[Options]

# Regridding information
     minlevel = 4               # Minimum level
     maxlevel = 6               # Maximum levels of refinement

     regrid_interval = 1        # Regrid every 'regrid_interval' time steps.
     refine_threshold = 0.05
     coarsen_threshold = 0.005
     smooth-refine = T
     smooth-level = 4
     coarsen-delay = 0

# Time stepping
     tfinal = 1
     initial_dt = 2.5e-2            # Initial time step for 'minlevel'

     use_fixed_dt = F            # Take a fixed time step
     max_cfl = 1.0
     desired_cfl = 0.9

     outstyle = 1                # OutputStyle = 1,2,3 (see below, e.g. [OutputStyle_1]
     nout = 1                    # Used for all three out styles
     nstep = 1                   # Only used if outstyle is 3

     subcycle = T                # subcycle in time ( = T or F).
     advance-one-step = F
     outstyle-uses-maxlevel = F

# File and console IO
     verbosity = production      # verbose
     output = F                  # ascii output
     report-timing = T
     report-timing-verbosity = wall

# Debugging and diagnostics
     trapfpe = T
     mpi_debug = F
     run-user-diagnostics = F
     conservation-check = F

# Mapping and topology
     manifold = F         # Manifold

     # Used only if manifold = F (fclaw2d_map_nomap)
     ax = -2.5
     bx = 2.5
     ay = -2.5
     by = 2.5

[cudaclaw]
     order  = 2 2         # normal and transverse order
     mcapa = 0            # mcapa
     src_term = 0         # src_term

     mwaves = 3           # mwaves
     mthlim = 4 4 4       # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1      # mthbc(1) (left edge), etc.

     buffer-len = 1024    # Max number of patches processed by a single CUDA kernel call

     # output
     ascii-out = T
     vtk-out = F
     


